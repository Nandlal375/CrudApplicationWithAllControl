using CrudApplicationWithAllControl.Models;
using CrudApplicationWithAllControl.Repository;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.AspNetCore.Mvc.Rendering;
using Newtonsoft.Json;
using System.Text.Json.Serialization;

namespace CrudApplicationWithAllControl.Controllers
{
    public class StudentController : Controller
    {
        //private readonly ILogger<HomeController> _logger;
        private readonly IConfiguration Configuration;
        private readonly IWebHostEnvironment _environment;
        public StudentController(IConfiguration _configuration, IWebHostEnvironment environment)
        {
            //_logger = logger;
            Configuration = _configuration;
            _environment = environment;
        }
        [HttpGet]
        public IActionResult Index(int Id)
        {
            BindCountry();
            StudentModel list = new StudentModel();
            if (Id > 0)
            {
                ViewBag.btn = "Update";
                StudentRepo sr = new StudentRepo(Configuration);
                list = sr.GetStudentsById(Id);
                ViewBag.imageFileName = list.imageFileName;
                var HData1 = list.Hobby.ToString();
                string[] activityArray1 = HData1.Split(',');

                list.tblDepartments = new List<DeptDetail>
                {
                 new DeptDetail { DeptName = "Reading", ischecked = false },
                 new DeptDetail { DeptName = "Cooking", ischecked = false },
                 new DeptDetail { DeptName = "Cricket", ischecked = false }
                };
                foreach (var item in list.tblDepartments)
                {
                    foreach (var item1 in activityArray1)
                    {
                        if (item.DeptName == item1)
                        {
                            item.ischecked = true;
                            break;
                        }
                    }
                }
            }
            else
            {
                var HData = new List<string> { "Reading", "Cooking", "Cricket" };
                string HDataString = string.Join(", ", HData);
                string[] activityArray = HDataString.Split(',');
                list.tblDepartments = new List<DeptDetail>();
                for (int i = 0; i < activityArray.Length; i++)
                {
                    list.tblDepartments.Add(new DeptDetail
                    {
                        DeptName = activityArray[i],
                        ischecked = false,
                    });
                }
               
            }
            return View(list);
        }
        public void BindCountry()
        {
            List<StudentModel> list = new List<StudentModel>();
            StudentRepo sr = new StudentRepo(Configuration);
            list = sr.AllCountry();
            var selectedListItem = list.Select(x => new SelectListItem
            {
                Text = x.CName,
                Value = x.CId
            });
            ViewBag.Country = selectedListItem;
        }

        public IActionResult FindCountryId(string countryId)
        {
           StudentRepo sr = new StudentRepo(Configuration);
           List<StudentModel> stateList = sr.BindStatebyCountryId(countryId);
           SelectList selectList = new SelectList(stateList, "stateid", "statename");
           return Json(selectList);
        }

        [HttpPost]
        public IActionResult Insert(StudentModel sm)
        {
            if (!ModelState.IsValid)
            {
                return RedirectToAction("Index");
            }
            else
            {
                for (int i = 0; i < sm.Hobbys.Count(); i++)
                {
                    sm.Hobby += (sm.Hobbys[i] + ',').Trim(' ');
                }
                string filename = uploadFile(sm);
                var userdetail = new StudentModel()
                {
                    name = sm.name,
                    Address = sm.Address,
                    phonenumber = sm.phonenumber,
                    email = sm.email,
                    image = sm.image,
                    imageFileName = filename.Trim(' '),
                    Hobby = sm.Hobby,
                    country = sm.country,
                    Gender = sm.Gender,
                    statename = sm.statename
                };
                StudentRepo sr = new StudentRepo(Configuration);
                sr.StudentAdd(userdetail);
                TempData["message"] = "Record insert successffully !!";
                ModelState.Clear();
                return RedirectToAction("Details");
            }
        }

        public string uploadFile(StudentModel sdd)
        {
            string fileName = null;
            if (sdd.image != null)
            {
                string uploadDir = Path.Combine(_environment.WebRootPath, "Images");
                fileName = Guid.NewGuid().ToString() + "-" + sdd.image.FileName;
                string FilePath = Path.Combine(uploadDir, fileName);
                using (var filestream = new FileStream(FilePath, FileMode.Create))
                {
                    sdd.image.CopyTo(filestream);
                }
            }
            return fileName;
        }

        public IActionResult Details()
        {
            string message = TempData["message"] as string;
            ViewBag.image = TempData["filePath"] as string;
            if (!string.IsNullOrEmpty(message))
            {
                ViewBag.Message = message;
            }
            else
            {
                //ViewBag.Message = "No message received!";
            }
            List<StudentModel> users = new List<StudentModel>();
            StudentRepo sr = new StudentRepo(Configuration);
            users = sr.GetStudents();
            return View(users);
        }

        [HttpPost]
        public IActionResult Edit(StudentModel esm)
        {
            StudentRepo sr = new StudentRepo(Configuration);
            for (int i = 0; i < esm.Hobbys.Count(); i++)
            {
                esm.Hobby += (esm.Hobbys[i] + ',').Trim(' ');
            }
            string filename = uploadFile(esm);
            var userdetail = new StudentModel()
            {
                name = esm.name,
                Address = esm.Address,
                phonenumber = esm.phonenumber,
                email = esm.email,
                Id = esm.Id,
                image = esm.image,
                imageFileName = filename,
                Hobby = esm.Hobby,
                country = esm.country,
                Gender = esm.Gender,
                statename = esm.statename,
            };
            if (sr.UpdateStudentsById(userdetail))
            {
                TempData["message"] = "Record updated successfully";
                return RedirectToAction("Details");
            }
            else
            {
                return RedirectToAction("Index");
            }
        }
        public IActionResult Delete(int id, string imageFileName)
        {
            if (imageFileName == null)
            {
                return RedirectToAction("Details");
            }
            string webRootPath = Path.Combine(_environment.WebRootPath, "images");
            string imagePath = Path.Combine(webRootPath, imageFileName);
            if (System.IO.File.Exists(imagePath))
            {
                System.IO.File.Delete(imagePath);
            }
            StudentRepo sr = new StudentRepo(Configuration);
            sr.DeleteStudentsById(id);
            TempData["message"] = "Record delete successfully";
            return RedirectToAction("Details");
        }
    }
}


========================

@model StudentModel

<script>
    function validateForm() {
        let name = document.forms["myForm"]["name"].value;
        let address = document.forms["myForm"]["Address"].value;
        let phonenumber = document.forms["myForm"]["phonenumber"].value;
        let email = document.forms["myForm"]["email"].value; 
        let image = document.forms["myForm"]["image"].value;
        let country = document.forms["myForm"]["country"].value;
        if (name == "") {
            alert("Name must be filled");
            return false;
        }
        if (country == "") {
            alert("country must be filled");
            return false;
        }
        if (address == "") {
            alert("address must be filled");
            return false;
        }
        if (phonenumber == "") {
            alert("phone number must be filled");
            return false;
        }
        if (email == "") {
            alert("email must be filled");
            return false;
        }
        if (image == "") {
            alert("image must be filled");
            return false;
        }
    }

    function validatePhoneNumber() {
        const phoneNumber = document.getElementById('phoneNumber').value.trim();
        const pattern = /^\d{10}$/;
        const isValid = pattern.test(phoneNumber);
        document.getElementById('phoneValidationMsg').textContent = isValid ? '' : 'Please enter a valid 10-digit phone number.';
        return isValid;
    }

  function validation() {
  let form = document.getElementById('form')
  let email = document.getElementById('email').value
  let text = document.getElementById('text')
  let pattern = /^[^ ]+@@[^ ]+\.[a-z]{2,3}$/

  if (email.match(pattern)) {
    form.classList.add('valid')
    form.classList.remove('invalid')
    text.innerHTML = "Your Email Address in valid"
    text.style.color = '#00ff00'
  } else {
    form.classList.remove('valid')
    form.classList.add('invalid')
    text.innerHTML = "Please Enter Valid Email Address"
    text.style.color = '#ff0000'
  }

  if (email == '') {
    form.classList.remove('valid')
    form.classList.remove('invalid')
    text.innerHTML = ""
    text.style.color = '#00ff00'
  }
}
</script>
<style>
      #form #email {
        width: 300px;
        /* background: #292929;
        outline: none;
        border: none;
        padding: 10px;
        border-radius: 6px;
        color: #fff;
        font-style: 18px; */
    } 

    #form .input-box {
        position: relative;
    }

    /* #text {
        display: block;
        color: #000;
        font-weight: 300;
        font-style: italic;
        padding: 5px;
    } */

    #form.invalid .input-box::before {
        content: '';
        position: absolute;
        right: 12px;
        top: 29px;
        width: 24px;
        height: 24px;
        background: url(https://fadzrinmadu.github.io/hosted-assets/email-validation-check-using-javascript/invalid.png);
        -webkit-background-size: cover;
        background-size: cover;
    }

    #form.valid .input-box::before {
        content: '';
        position: absolute;
        right: 12px;
        top: 29px;
        width: 24px;
        height: 24px;
        background: url(https://fadzrinmadu.github.io/hosted-assets/email-validation-check-using-javascript/valid.png);
        -webkit-background-size: cover;
        background-size: cover;
    }
</style>

<form method="post" enctype="multipart/form-data" name="myForm" onsubmit="return validateForm()" asp-action="@(Model.Id > 0 ? "Edit" : "Insert")" id="form">
    <div class="col-4">
        <input type="hidden" asp-for="Id"/>
        <label asp-for="name">Name:</label>
        <input asp-for="name" class="form-control" placeholder="Enter your name" autocomplete="off"/>
    </div>

    <div class="col-4">
        <label asp-for="Address">Address:</label>
        <textarea asp-for="Address" class="form-control" placeholder="Address 20 character...." autocomplete="off"></textarea>
    </div>

    <div class="col-4">
        <label asp-for="phonenumber">Phone Number:</label>
        <input asp-for="phonenumber" class="form-control" id="phoneNumber" onchange="validatePhoneNumber()" placeholder="Enter your mobile number" autocomplete="off" />
        <div id="phoneValidationMsg" style="color:red;"></div>
    </div>
    
    <div class="col-4">
    <label>Country :</label>
        @Html.DropDownListFor(model => model.country, ViewBag.Country as List<SelectListItem>, "<-select country->", new {@id = "ddlcountry", @class = "form-control"})
    </div>
    <div class="col-4">
        <label>State Name:</label>
        <select id="ddlstate" class="form-control" asp-for="statename">
            <option value="">-- Select State --</option>
        </select>
    </div>
    <br />
    <label>Hobby : </label><br/>
     <div>

        @for (var i = 0; i<Model.tblDepartments.Count; i++)
        {
            <input type="checkbox" asp-for="@Model.tblDepartments[i].ischecked" name="Hobbys" value="@Model.tblDepartments[i].DeptName"/>
             @Model.tblDepartments[i].DeptName
            <input type="hidden" asp-for="@Model.tblDepartments[i].DeptName">
        }
    </div> 
<br />
    <div>
        <label>Gender : </label><br />
        Male <input type="radio" name="Gender" value="Male" asp-for="Checkedproperties"/>
        Female <input type="radio" name="Gender" value="Female" asp-for="Checkedproperties"/>
        Other <input type="radio" name="Gender" value="Other" asp-for="Checkedproperties"/>
    </div>
    <br />
    <div class="col-4 input-box">
        <label>Email:</label>
        <input asp-for="email" class="form-control" id="email" onkeydown="validation()" placeholder="Enter your email" autocomplete="off"/>
        <span id="text"></span>
    </div>
    <br />
    <div class="col-4">
        <label asp-for="image">Image:</label>
        <input type="file" asp-for="image" class="form-control-file">
        <br />
        @if (ViewBag.imageFileName != null)
        {
            <img src="~/Images/@ViewBag.imageFileName" style="width:100px; height:100px;">
        }
        
    </div>
    <br />
    <input type="submit" class="btn btn-primary" value="@(!string.IsNullOrEmpty(ViewBag.btn) ? ViewBag.btn : "Save")" /> &nbsp;&nbsp; @Html.ActionLink("Details", "Details", "Student", null, new { @class = "btn btn-primary" })
</form>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#ddlcountry').trigger('change');
        var selectedCountry1 = $("#ddlcountry").val();
        if (selectedCountry1 == "" || selectedCountry1 == " ") {
            selectedCountry1 = null;
        }
        $.ajax({
            url: "/Student/FindCountryId",
            method: "POST",
            data: { countryId: selectedCountry1 },
            success: function (response) {
                var stateDropdown = $('#ddlstate');
                stateDropdown.empty();
                stateDropdown.append($('<option></option>').text('-- Select State --').val('0'));
                $.each(response, function (index, state) {
                    stateDropdown.append($('<option></option>').text(state.text).val(state.text));
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    });
        // Handle change event of country dropdown
        $("body").on("change", "#ddlcountry", function () {
            var selectedCountry = $(this).val();
            $.ajax({
                url: "/Student/FindCountryId",
                method: "POST",
                data: { countryId: selectedCountry },
                success: function (response) {
                    var stateDropdown = $('#ddlstate');
                    stateDropdown.empty();
                    stateDropdown.append($('<option></option>').text('-- Select State --').val('0'));
                    $.each(response, function (index, state) {
                        stateDropdown.append($('<option></option>').text(state.text).val(state.text));
                    });
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });
    

</script>


=================

﻿
 @model IEnumerable<CrudApplicationWithAllControl.Models.StudentModel>
@*

    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.22/datatables.min.css" />
<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.10.22/datatables.min.js"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.1/css/toastr.css" rel="stylesheet" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.1/js/toastr.js"></script>
<script>
    toastr.options = {
        "closeButton": true,
        "debug": false,
        "newestOnTop": false,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    }
    // Display a success notification
    if ('@ViewBag.Message' !== null && '@ViewBag.Message' !== "") {
        toastr.success('@ViewBag.Message');
    }
    else {}
    
    function confirmDelete() {
        return confirm("Are you sure you want to delete this item?");
    }
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("datatable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
   

</script>
<style>
#myInput {
  background-image: url('/css/searchicon.png');
  background-position: 10px 10px;
  background-repeat: no-repeat;
  width: 100%;
  font-size: 16px;
  padding: 12px 20px 12px 40px;
  border: 1px solid #ddd;
  margin-bottom: 12px;
}
</style>
@Html.ActionLink("ADD", "Index", "Student", null, new { @class = "btn btn-success" })
<div class="col-4" style="float:right;">
    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." title="Type in a name">
</div>
<table class="table table-striped display" id="datatable" style="width:100%">
    <thead>
        <th>Name</th>   
        <th>Address</th>
        <th>Email</th>
        <th>Phone Number</th>
        <th>Image Path</th>
        <th>Country</th>
        <th>StateName</th>
        <th>Hobby</th>
        <th>Gender</th>
        <th>Action</th>
    </thead>

    <tbody>
        @foreach (var item in Model)
        { 
                <tr>
                <td>@item.name</td>
                <td>@item.Address</td>
                <td>@item.email</td>
                <td>@item.phonenumber</td>
                <td>
                    <img src="~/Images/@item.imageFileName" style="width:100px; height:100px;">    
                </td>
                @if (item.country == "1")
                {
                    <td>India</td>
                }else if (item.country == "2")
                {
                    <td>Pakistan</td>
                    
                }
                else
                {
                    <td>Newzeland</td>
                }

                <td>@item.statename</td>
                <td>@item.Hobby</td>
                <td>@item.Gender</td>
                <td>
                    <input type="hidden" name="@item.imageFileName"/>
                    <a asp-action="Index" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>&nbsp;&nbsp;
                    <a asp-action="Delete" asp-route-id="@item.Id" asp-route-imageFileName="@item.imageFileName" onclick="return confirmDelete();" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
       @*  <script>
            $(document).ready(function () {
                Datatables();
            });
            function Datatables() {
                $('#datatable').DataTable({
                    responsive: true,
                    ordering: false,
                    searching: false,
                    info: false,
                    ordering: false,
                    paging: true,
                    pageLength: 10
                });
            }
        </script> *@
    </tbody>
</table>

==== onchange function call when dropdown country any select data ===============
<script>
    $(document).ready(function () {
        $("#ddlcountry").change(function () {
            console.log("Hello hii");
        });
    });
</script>

